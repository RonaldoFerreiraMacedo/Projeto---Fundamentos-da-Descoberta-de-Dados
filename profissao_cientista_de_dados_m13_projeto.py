# -*- coding: utf-8 -*-
"""Profissao Cientista de Dados M13 Projeto.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12L2MXjC4F7NT0_dCjs3AI747Fb_pA1nb

# **MÓDULO 13**
# Projeto - Fundamentos da Descoberta de Dados

Nesse projeto trabalharemos com a base de dados de produtos de um supermercado do Chile.
A ideia é que vocês apliquem os conceitos estatísticos vistos no último módulo, mais os conceitos de visualizações de dados através de gráficos e finalizem publicando no seu github!
"""

import pandas as pd
import matplotlib.pyplot as plt
import plotly.express as px

"""Faça a leitura dos dados do arquivo CSV:


Altere o código abaixo de acordo com seu diretório.
"""

df = pd.read_csv("/content/MODULO7_PROJETOFINAL_BASE_SUPERMERCADO - MODULO7_PROJETOFINAL_BASE_SUPERMERCADO (1).csv.csv")

df.head(10)

"""Os campos do nosso dataframe são:

**Title:** Nome do produto.


**Marca:** A marca do produto.


**Preco_Normal:** O preço em que o produto costuma ser vendido quando não há desconto.


**Preco_Desconto:** O preço vendido após o desconto ser aplicado.


**Preco_Anterior:** Preço em que era comercializado o produto antes do desconto aplicado.


**Desconto:** Total de desconto aplicado.






As colunas que aparecem com valores 0 são para os produtos onde não tivemos descontos aplicados.


As categorias estão em espanhol!

# 1 - Traga a média e a mediana dos preços - coluna Preco_Normal - por categoria de produto.
# Identifique as categorias que parecem ter um valor de média abaixo ou acima da mediana.
"""

#Seu código aqui para a média
df.groupby('Categoria')['Preco_Normal'].mean().reset_index().sort_values(by='Preco_Normal', ascending=False)

#Seu código aqui para a mediana
df.groupby('Categoria')['Preco_Normal'].median().reset_index().sort_values(by='Preco_Normal', ascending=False)

"""Digite aqui as categorias: Todas as Categorias estão ou abaixo ou acima da mediana

# 2 - Traga o desvio padrão por categoria de produto.
# Qual o comportamento da média e mediana nas categorias com maior desvio?
"""

#Seu código aqui
# df.groupby('Categoria')['Preco_Normal'].std().reset_index().sort_values(by='Preco_Normal', ascending=False)
df.groupby('Categoria')['Preco_Normal'].agg(['mean', 'median', 'std']).sort_values(by='std', ascending=False)

"""Digite nesse campo o comportamento que você identificou.

As categorias com maiores desvios e seus comportamentos foram:

1 - lacteos: A média é MUITO maior que a mediana.

2 - beleza-y-cuidado-personal: A média ainda é um pouco maior que a mediana.

3 - congelados: Diferença considerável entre média e mediana, mas não tão grande quanto em "lacteos".

# 3 - Plot um boxplot da distribuição do Preco_Normal para a categoria que você identificou que tem o maior desvio padrão. Como é a distribuição desses dados segundo o boxplot? Você identifica muitos outliers?

Dica: Para trazer apenas os dados da categoria que você deseja você pode usar o df.loc[df['Categoria'] == 'CATEGORIA ESCOLHIDA'
"""

df_filtrado = df[df['Categoria'] == 'lacteos']

plt.boxplot(df_filtrado['Preco_Normal'])

# Adicionando título
plt.title("Boxplot para Categoria 'lacteos'")
plt.xticks([1], ['lacteos'])  # Adiciona o nome da categoria

plt.show()

"""# 4 - Plote um gráfico de barras onde temos a média de descontos por categoria."""

# Agrupando por Desconto
desconto_medio = df.groupby('Categoria')['Desconto'].mean().reset_index().sort_values(by='Desconto', ascending=False)

plt.figure(figsize=(12, 6))

plt.bar(desconto_medio['Categoria'], desconto_medio['Desconto'], color='skyblue')

plt.title('Desconto por Categoria')
plt.xlabel('Categoria')
plt.ylabel('Desconto')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

"""# 5 - Plote um gráfico de mapa interativo agrupando os dados por categoria, marca e trazendo a média de desconto."""

desconto_marca = df.groupby('Marca')['Desconto'].mean().reset_index().sort_values(by='Desconto', ascending=False)

fig = px.bar(
    desconto_marca,
    x='Marca',
    y='Desconto',
    color='Marca',
    title='Desconto Médio por Marca',
    height=600
)

fig.update_layout(xaxis_tickangle=-45)
fig.show()